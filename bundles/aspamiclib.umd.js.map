{"version":3,"file":"aspamiclib.umd.js.map","sources":["ng://aspamiclib/mic/mic.component.ts","ng://aspamiclib/lib.module.ts"],"sourcesContent":["import { Component, Input, Output, EventEmitter } from '@angular/core';\n\nvar Speech = require('watson-html5-speech-recognition');\nvar speech = new Speech.SpeechToText({\n  watsonTokenUrl: `/api/speech-to-text/`\n});\nvar activeSTT;\n\n@Component({\n  selector: 'aspamic',\n  template: `<a (click)=\"startListening()\" [style.background]=\"'url(' + imageSrc + ')'\" style=\"cursor: pointer;\" title=\"Listen\"> </a>`,\n  styleUrls: ['./mic.component.scss']\n})\nexport class MicComponent {\n\n  @Input() apiURL: string = '';\n  @Input() imageSrc: string = '';\n  @Output() micResult: EventEmitter<any> = new EventEmitter<any>();\n\n  startListening() {\n    if (activeSTT) {\n      // do nothing, speech is active\n    } else if (speech.isSupported) {\n      this.listen();\n    } else {\n      alert('speech not supported by this browser');\n    }\n  }\n\n  stopListening(finalText) {\n    console.log('stop');\n    console.log(finalText);\n    if (activeSTT) {\n      activeSTT.stop();\n      activeSTT = null;\n    }\n  }\n  listen() {\n    var that = this;\n    activeSTT = speech.listen({\n      onStart: function () {\n        console.log('starting');\n      },\n      onResult: function (e) {\n        console.log(e.text);\n        // document.getElementById(\"recognizedText\").innerHTML = e.text;\n        if (e.isFinal) {\n          that.micResult.emit(e.text);\n          that.stopListening(e.text);\n        }\n      },\n      onError: function (e) {\n        console.log('error', e);\n      },\n      onEnd: function (e) {\n        console.log('end', e);\n      }\n    });\n  }\n\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MicComponent } from './mic/mic.component';\n// import { BarService } from './bar/bar.service';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    MicComponent\n  ],\n  exports: [\n    MicComponent\n  ]\n})\nexport class AspaMicModule {\n\n  public static forRoot(): ModuleWithProviders {\n\n    return {\n      ngModule: AspaMicModule,\n      providers: [\n        // BarService\n      ]\n    };\n  }\n}\n"],"names":["EventEmitter","Component","Input","Output","NgModule","CommonModule"],"mappings":";;;;;;;;;;AAAA;QAEI,MAAM,GAAG,OAAO,CAAC,iCAAiC,CAAC;;QACnD,MAAM,GAAG,IAAI,MAAM,CAAC,YAAY,CAAC;QACnC,cAAc,EAAE,sBAAsB;KACvC,CAAC;;QACE,SAAS;AAEb;QAAA;YAOW,WAAM,GAAW,EAAE,CAAC;YACpB,aAAQ,GAAW,EAAE,CAAC;YACrB,cAAS,GAAsB,IAAIA,iBAAY,EAAO,CAAC;SA2ClE;;;;QAzCC,qCAAc;;;YAAd;gBACE,IAAI,SAAS,EAAE,CAEd;qBAAM,IAAI,MAAM,CAAC,WAAW,EAAE;oBAC7B,IAAI,CAAC,MAAM,EAAE,CAAC;iBACf;qBAAM;oBACL,KAAK,CAAC,sCAAsC,CAAC,CAAC;iBAC/C;aACF;;;;;QAED,oCAAa;;;;YAAb,UAAc,SAAS;gBACrB,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;gBACpB,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;gBACvB,IAAI,SAAS,EAAE;oBACb,SAAS,CAAC,IAAI,EAAE,CAAC;oBACjB,SAAS,GAAG,IAAI,CAAC;iBAClB;aACF;;;;QACD,6BAAM;;;YAAN;;oBACM,IAAI,GAAG,IAAI;gBACf,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC;oBACxB,OAAO;;uBAAE;wBACP,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;qBACzB,CAAA;oBACD,QAAQ;;;uBAAE,UAAU,CAAC;wBACnB,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;;wBAEpB,IAAI,CAAC,CAAC,OAAO,EAAE;4BACb,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;4BAC5B,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;yBAC5B;qBACF,CAAA;oBACD,OAAO;;;uBAAE,UAAU,CAAC;wBAClB,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;qBACzB,CAAA;oBACD,KAAK;;;uBAAE,UAAU,CAAC;wBAChB,OAAO,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;qBACvB,CAAA;iBACF,CAAC,CAAC;aACJ;;oBAlDFC,cAAS,SAAC;wBACT,QAAQ,EAAE,SAAS;wBACnB,QAAQ,EAAE,kIAA0H;;qBAErI;;;6BAGEC,UAAK;+BACLA,UAAK;gCACLC,WAAM;;QA2CT,mBAAC;KApDD;;;;;;ACRA;AAKA;QAAA;SAsBC;;;;QATe,qBAAO;;;YAArB;gBAEE,OAAO;oBACL,QAAQ,EAAE,aAAa;oBACvB,SAAS,EAAE;;qBAEV;iBACF,CAAC;aACH;;oBArBFC,aAAQ,SAAC;wBACR,OAAO,EAAE;4BACPC,mBAAY;yBACb;wBACD,YAAY,EAAE;4BACZ,YAAY;yBACb;wBACD,OAAO,EAAE;4BACP,YAAY;yBACb;qBACF;;QAYD,oBAAC;KAtBD;;;;;;;;;;;;;;;;;;;;;;;"}
