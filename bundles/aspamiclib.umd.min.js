!function(t,o){"object"==typeof exports&&"undefined"!=typeof module?o(exports,require("@angular/core"),require("@angular/common")):"function"==typeof define&&define.amd?define("aspamiclib",["exports","@angular/core","@angular/common"],o):o(t.aspamiclib={},t.ng.core,t.ng.common)}(this,function(t,o,e){"use strict";var n,i=new(require("watson-html5-speech-recognition").SpeechToText)({watsonTokenUrl:"/api/speech-to-text/"}),r=function(){function t(){this.apiURL="",this.imageSrc="",this.micResult=new o.EventEmitter}return t.prototype.startListening=function(){n||(i.isSupported?this.listen():alert("speech not supported by this browser"))},t.prototype.stopListening=function(t){console.log("stop"),console.log(t),n&&(n.stop(),n=null)},t.prototype.listen=function(){var o=this;n=i.listen({onStart:function(){console.log("starting")},onResult:function(t){console.log(t.text),t.isFinal&&(o.micResult.emit(t.text),o.stopListening(t.text))},onError:function(t){console.log("error",t)},onEnd:function(t){console.log("end",t)}})},t.decorators=[{type:o.Component,args:[{selector:"aspamic",template:"<button  (click)=\"startListening()\" [style.background]=\"'url(' + imageSrc + ')'\">Mic</button>",styles:["h1{color:#f0f}"]}]}],t.propDecorators={apiURL:[{type:o.Input}],imageSrc:[{type:o.Input}],micResult:[{type:o.Output}]},t}(),s=function(){function t(){}return t.forRoot=function(){return{ngModule:t,providers:[]}},t.decorators=[{type:o.NgModule,args:[{imports:[e.CommonModule],declarations:[r],exports:[r]}]}],t}();t.MicComponent=r,t.MyMicModule=s,Object.defineProperty(t,"__esModule",{value:!0})});
//# sourceMappingURL=aspamiclib.umd.min.js.map